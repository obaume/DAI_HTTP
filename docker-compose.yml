services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.9
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker  --entryPoints.web.address=:80 --entryPoints.admin.address=:1717
    ports:
      # The HTTP port
      - "80:80"
      # admin port
      - 1717:1717
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
  static:
    build: docker-images/php-apache
    scale: 3
    labels:
      - "traefik.http.routers.static.rule=Host(`localhost`)"
      - "traefik.http.routers.static.entrypoints=web"
      - "traefik.http.services.static-service.loadBalancer.sticky.cookie=true"
      - "traefik.http.services.static-service.loadBalancer.sticky.cookie.name=static_server_cookie"
  dynamic:
    build: docker-images/express-image
    scale: 3
    labels:
      - "traefik.http.routers.dynamic.rule=Host(`localhost`)"
      - "traefik.http.routers.dynamic.middlewares=dynamic-stripprefix"
      - "traefik.http.middlewares.dynamic-stripprefix.stripprefix.prefixes=/api"
      - "traefik.http.routers.dynamic.rule=Host(`localhost`) && Path(`/api`)"
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer-data:/data
    labels:
      - "traefik.http.routers.portainer.rule=Host(`localhost`)"
      - "traefik.http.routers.portainer.entrypoints=admin"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"